import unittest
from roman_to_decimal import convert_roman_to_decimal
from parameterized import parameterized


class TestRomanToDecimal(unittest.TestCase):

    @parameterized.expand([
        ('I', 1),
        ('II', 2),
        ('III', 3),
        ('IV', 4),
        ('V', 5),
        ('VI', 6),
        ('VII', 7),
        ('VIII', 8),
        ('IX', 9),
        ('X', 10),
        ('XI', 11),
        ('XII', 12),
        ('XIII', 13),
        ('XIV', 14),
        ('XV', 15),
        ('XVI', 16),
        ('XVII', 17),
        ('XVIII', 18),
        ('XIX', 19),
        ('XX', 20),
        ('XXI', 21),
        ('XXII', 22),
        ('XXIII', 23),
        ('XXIV', 24),
        ('XXV', 25),
        ('XXVI', 26),
        ('XXVII', 27),
        ('XXVIII', 28),
        ('XXIX', 29),
        ('XXX', 30),
        ('XXXI', 31),
        ('XXXII', 32),
        ('XXXIII', 33),
        ('XXXIV', 34),
        ('XXXV', 35),
        ('XXXVI', 36),
        ('XXXVII', 37),
        ('XXXVIII', 38),
        ('XXXIX', 39),
        ('XL', 40),
        ('XLI', 41),
        ('XLII', 42),
        ('XLIII', 43),
        ('XLIV', 44),
        ('XLV', 45),
        ('XLVI', 46),
        ('XLVII', 47),
        ('XLVIII', 48),
        ('XLIX', 49),
        ('L', 50),
        ('LI', 51),
        ('LII', 52),
        ('LIII', 53),
        ('LIV', 54),
        ('LV', 55),
        ('LVI', 56),
        ('LVII', 57),
        ('LVIII', 58),
        ('LIX', 59),
        ('LX', 60),
        ('LXI', 61),
        ('LXII', 62),
        ('LXIII', 63),
        ('c', 100),
        ('cc', 200),
        ('ccc', 300),
        ('cd', 400),
        ('d', 500),
        ('dc', 600),
        ('dcc', 700),
        ('dccc', 800),
        ('cm', 900),
        ('m', 1000),
        ('mc', 1100),
        ('mcc', 1200),
        ('mccc', 1300),
        ('mcd', 1400),
        ('md', 1500),
        ('mdc', 1600),
        ('mdcc', 1700),
        ('mdccc', 1800),
        ('mcm', 1900),
        ('mm', 2000),
        ('mmc', 2100),
        ('mmcc', 2200),
        ('mmccc', 2300),
        ('mmcd', 2400),
        ('mmd', 2500),
        ('mmdc', 2600),
        ('mmdcc', 2700),
        ('mmdccc', 2800),
        ('mmcm', 2900),
        ('mmm', 3000),
        ('mmmc', 3100),
        ('mmmcc', 3200),
        ('mmmccc', 3300),
        ('mmmcd', 3400),
        ('mmmd', 3500),
        ('mmmdc', 3600),
        ('mmmdcc', 3700),
        ('mmmdccc', 3800),
        ('mmmcm', 3900),
        ('mmmm', 4000),
        ('mmmmc', 4100),
        ('mmmmcc', 4200),
        ('mmmmccc', 4300),
        ('mmmmcd', 4400),
        ('mmmmd', 4500),
        ('mmmmdc', 4600),
        ('mmmmdcc', 4700),
        ('mmmmdccc', 4800),
        ('mmmmcm', 4900),
        ('mmmmm', 5000),
        ('mmmmmc', 5100),
        ('mmmmmcc', 5200),
        ('mmmmmccc', 5300),
        ('mmmmmcd', 5400),
        ('mmmmmd', 5500),
        ('mmmmmdc', 5600),
    ])
    def test_roman_to_decimal(self, roman_number, decimal_number):
        self.assertEqual(convert_roman_to_decimal(roman_number),
                         decimal_number)


if __name__ == "__main__":
    unittest.main()